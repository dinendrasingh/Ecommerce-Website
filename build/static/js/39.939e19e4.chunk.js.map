{"version":3,"sources":["components/cards/ProductCardInCheckout.js","pages/Cart.js","images/laptop.png","functions/user.js"],"names":["ProductCardInCheckout","p","dispatch","useDispatch","style","width","height","images","length","small","url","large","laptop","title","price","brand","onChange","e","console","log","target","value","cart","window","localStorage","getItem","JSON","parse","map","product","i","_id","color","setItem","stringify","type","payload","name","className","filter","c","count","quantity","toast","error","shipping","CheckCircleOutlined","CloseCircleOutlined","CloseOutlined","onClick","splice","Cart","history","useSelector","state","user","scope","to","reduce","currentValue","nextValue","userCart","token","then","res","data","ok","push","catch","err","disabled","pathname","from","authtoken","a","axios","post","process","headers","getUserCart","get","emptyUserCart","delete","saveUserAddress","address","applyCoupon","coupon","createOrder","stripeResponse","getUserOrders","getWishlist","removeWishlist","productId","put","addToWishlist","createCashOrderForUser","COD","couponTrueOrFalse","couponApplied"],"mappings":"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","file":"static/js/39.939e19e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport laptop from \"../../images/laptop.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  CloseOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst ProductCardInCheckout = ({ p }) => {\r\n  const colors = [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"];\r\n  let dispatch = useDispatch();\r\n\r\n  const handleColorChange = (e) => {\r\n    console.log(\"color changed\", e.target.value);\r\n\r\n    let cart = [];\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === p._id) {\r\n          cart[i].color = e.target.value;\r\n        }\r\n      });\r\n\r\n      //  console.log('cart udpate color', cart)\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: cart,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleQuantityChange = (e) => {\r\n    // console.log(\"available quantity\", p.quantity);\r\n    let count = e.target.value < 1 ? 1 : e.target.value;\r\n\r\n    if (count > p.quantity) {\r\n      toast.error(`Max available quantity: ${p.quantity}`);\r\n      return;\r\n    }\r\n\r\n    let cart = [];\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id == p._id) {\r\n          cart[i].count = count;\r\n        }\r\n      });\r\n\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: cart,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    // console.log(p._id, \"to remove\");\r\n    let cart = [];\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      }\r\n      // [1,2,3,4,5]\r\n      cart.map((product, i) => {\r\n        if (product._id === p._id) {\r\n          cart.splice(i, 1);\r\n        }\r\n      });\r\n\r\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: cart,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <div style={{ width: \"100px\", height: \"auto\" }}>\r\n            {p.images.length ? (\r\n              <ModalImage small={p.images[0].url} large={p.images[0].url} />\r\n            ) : (\r\n              <ModalImage small={laptop} large={laptop} />\r\n            )}\r\n          </div>\r\n        </td>\r\n        <td>{p.title}</td>\r\n        <td>${p.price}</td>\r\n        <td>{p.brand}</td>\r\n        <td>\r\n          <select\r\n            onChange={handleColorChange}\r\n            name=\"color\"\r\n            className=\"form-control\"\r\n          >\r\n            {p.color ? (\r\n              <option value={p.color}>{p.color}</option>\r\n            ) : (\r\n              <option>Select</option>\r\n            )}\r\n            {colors\r\n              .filter((c) => c !== p.color)\r\n              .map((c) => (\r\n                <option key={c} value={c}>\r\n                  {c}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            value={p.count}\r\n            onChange={handleQuantityChange}\r\n          />\r\n        </td>\r\n        <td className=\"text-center\">\r\n          {p.shipping === \"Yes\" ? (\r\n            <CheckCircleOutlined className=\"text-success\" />\r\n          ) : (\r\n            <CloseCircleOutlined className=\"text-danger\" />\r\n          )}\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <CloseOutlined\r\n            onClick={handleRemove}\r\n            className=\"text-danger pointer\"\r\n          />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default ProductCardInCheckout;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProductCardInCheckout from \"../components/cards/ProductCardInCheckout\";\r\nimport { userCart } from \"../functions/user\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const { cart, user } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const getTotal = () => {\r\n    return cart.reduce((currentValue, nextValue) => {\r\n      return currentValue + nextValue.count * nextValue.price;\r\n    }, 0);\r\n  };\r\n\r\n  const saveOrderToDb = () => {\r\n    // console.log(\"cart\", JSON.stringify(cart, null, 4));\r\n    userCart(cart, user.token)\r\n      .then((res) => {\r\n        console.log(\"CART POST RES\", res);\r\n        if (res.data.ok) history.push(\"/checkout\");\r\n      })\r\n      .catch((err) => console.log(\"cart save err\", err));\r\n  };\r\n\r\n  const saveCashOrderToDb = () => {\r\n    // console.log(\"cart\", JSON.stringify(cart, null, 4));\r\n    dispatch({\r\n      type: \"COD\",\r\n      payload: true,\r\n    });\r\n    userCart(cart, user.token)\r\n      .then((res) => {\r\n        console.log(\"CART POST RES\", res);\r\n        if (res.data.ok) history.push(\"/checkout\");\r\n      })\r\n      .catch((err) => console.log(\"cart save err\", err));\r\n  };\r\n\r\n  const showCartItems = () => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Image</th>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Brand</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Count</th>\r\n          <th scope=\"col\">Shipping</th>\r\n          <th scope=\"col\">Remove</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      {cart.map((p) => (\r\n        <ProductCardInCheckout key={p._id} p={p} />\r\n      ))}\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid pt-2\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <h4>Cart / {cart.length} Product</h4>\r\n\r\n          {!cart.length ? (\r\n            <p>\r\n              No products in cart. <Link to=\"/shop\">Continue Shopping.</Link>\r\n            </p>\r\n          ) : (\r\n            showCartItems()\r\n          )}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <h4>Order Summary</h4>\r\n          <hr />\r\n          <p>Products</p>\r\n          {cart.map((c, i) => (\r\n            <div key={i}>\r\n              <p>\r\n                {c.title} x {c.count} = ${c.price * c.count}\r\n              </p>\r\n            </div>\r\n          ))}\r\n          <hr />\r\n          Total: <b>${getTotal()}</b>\r\n          <hr />\r\n          {user ? (\r\n            <>\r\n              <button\r\n                onClick={saveOrderToDb}\r\n                className=\"btn btn-sm btn-primary mt-2\"\r\n                disabled={!cart.length}\r\n              >\r\n                Proceed to Checkout\r\n              </button>\r\n              <br />\r\n              <button\r\n                onClick={saveCashOrderToDb}\r\n                className=\"btn btn-sm btn-warning mt-2\"\r\n                disabled={!cart.length}\r\n              >\r\n                Pay Cash on Delivery\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button className=\"btn btn-sm btn-primary mt-2\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: { from: \"cart\" },\r\n                }}\r\n              >\r\n                Login to Checkout\r\n              </Link>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","export default __webpack_public_path__ + \"static/media/laptop.db0a6ff4.png\";","import axios from \"axios\";\r\n\r\nexport const userCart = async (cart, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart`,\r\n    { cart },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const getUserCart = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const emptyUserCart = async (authtoken) =>\r\n  await axios.delete(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const saveUserAddress = async (authtoken, address) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/address`,\r\n    { address },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const applyCoupon = async (authtoken, coupon) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart/coupon`,\r\n    { coupon },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const createOrder = async (stripeResponse, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/order`,\r\n    { stripeResponse },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const getUserOrders = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/orders`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const getWishlist = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/wishlist`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const removeWishlist = async (productId, authtoken) =>\r\n  await axios.put(\r\n    `${process.env.REACT_APP_API}/user/wishlist/${productId}`,\r\n    {},\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const addToWishlist = async (productId, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/wishlist`,\r\n    { productId },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const createCashOrderForUser = async (\r\n  authtoken,\r\n  COD,\r\n  couponTrueOrFalse\r\n) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cash-order`,\r\n    { couponApplied: couponTrueOrFalse, COD },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n"],"sourceRoot":""}