{"version":3,"sources":["components/order/Invoice.js","pages/user/History.js","functions/user.js","components/nav/UserNav.js","components/cards/ShowPaymentInfo.js"],"names":["styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","footer","padding","pageNumber","position","bottom","left","right","Invoice","order","style","fixed","Date","toLocaleString","data","products","getContent","x","product","price","count","brand","paymentIntent","created","id","orderStatus","amount","History","useState","orders","setOrders","user","useSelector","state","useEffect","loadUserOrders","getUserOrders","token","then","res","console","log","JSON","stringify","showOrderInTable","className","scope","map","p","i","shipping","CheckCircleOutlined","CloseCircleOutlined","showDownloadLink","document","fileName","UserNav","length","reverse","ShowPaymentInfo","userCart","cart","authtoken","a","axios","post","process","headers","getUserCart","get","emptyUserCart","delete","saveUserAddress","address","applyCoupon","coupon","createOrder","stripeResponse","getWishlist","removeWishlist","productId","put","addToWishlist","createCashOrderForUser","COD","couponTrueOrFalse","couponApplied","to","showStatus","currency","toUpperCase","payment_method_types","status"],"mappings":"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","file":"static/js/19.da1e94ba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Document, Page, Text, StyleSheet } from \"@react-pdf/renderer\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  DataTableCell,\r\n} from \"@david.kucsai/react-pdf-table\";\r\n\r\nconst Invoice = ({ order }) => (\r\n  <Document>\r\n    <Page style={styles.body}>\r\n      <Text style={styles.header} fixed>\r\n        ~ {new Date().toLocaleString()} ~\r\n      </Text>\r\n      <Text style={styles.title}>Order Invoice</Text>\r\n      <Text style={styles.author}>React Redux Ecommerce</Text>\r\n      <Text style={styles.subtitle}>Order Summary</Text>\r\n\r\n      <Table>\r\n        <TableHeader>\r\n          <TableCell>Title</TableCell>\r\n          <TableCell>Price</TableCell>\r\n          <TableCell>Quantity</TableCell>\r\n          <TableCell>Brand</TableCell>\r\n          <TableCell>Color</TableCell>\r\n        </TableHeader>\r\n      </Table>\r\n\r\n      <Table data={order.products}>\r\n        <TableBody>\r\n          <DataTableCell getContent={(x) => x.product.title} />\r\n          <DataTableCell getContent={(x) => `$${x.product.price}`} />\r\n          <DataTableCell getContent={(x) => x.count} />\r\n          <DataTableCell getContent={(x) => x.product.brand} />\r\n          <DataTableCell getContent={(x) => x.product.color} />\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <Text style={styles.text}>\r\n        <Text>\r\n          Date: {\"               \"}\r\n          {new Date(order.paymentIntent.created * 1000).toLocaleString()}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Order Id: {\"         \"}\r\n          {order.paymentIntent.id}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Order Status: {\"  \"}\r\n          {order.orderStatus}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Total Paid: {\"       \"}\r\n          {order.paymentIntent.amount}\r\n        </Text>\r\n      </Text>\r\n\r\n      <Text style={styles.footer}> ~ Thank you for shopping with us ~ </Text>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  footer: {\r\n    padding: \"100px\",\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n});\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UserNav from \"../../components/nav/UserNav\";\r\nimport { getUserOrders } from \"../../functions/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport ShowPaymentInfo from \"../../components/cards/ShowPaymentInfo\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport Invoice from \"../../components/order/Invoice\";\r\n\r\nconst History = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadUserOrders();\r\n  }, []);\r\n\r\n  const loadUserOrders = () =>\r\n    getUserOrders(user.token).then((res) => {\r\n      console.log(JSON.stringify(res.data, null, 4));\r\n      setOrders(res.data);\r\n    });\r\n\r\n  const showOrderInTable = (order) => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Brand</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Count</th>\r\n          <th scope=\"col\">Shipping</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {order.products.map((p, i) => (\r\n          <tr key={i}>\r\n            <td>\r\n              <b>{p.product.title}</b>\r\n            </td>\r\n            <td>{p.product.price}</td>\r\n            <td>{p.product.brand}</td>\r\n            <td>{p.color}</td>\r\n            <td>{p.count}</td>\r\n            <td>\r\n              {p.product.shipping === \"Yes\" ? (\r\n                <CheckCircleOutlined style={{ color: \"green\" }} />\r\n              ) : (\r\n                <CloseCircleOutlined style={{ color: \"red\" }} />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  const showDownloadLink = (order) => (\r\n    <PDFDownloadLink\r\n      document={<Invoice order={order} />}\r\n      fileName=\"invoice.pdf\"\r\n      className=\"btn btn-sm btn-block btn-outline-primary\"\r\n    >\r\n      Download PDF\r\n    </PDFDownloadLink>\r\n  );\r\n\r\n  const showEachOrders = () =>\r\n    orders.reverse().map((order, i) => (\r\n      <div key={i} className=\"m-5 p-3 card\">\r\n        <ShowPaymentInfo order={order} />\r\n        {showOrderInTable(order)}\r\n        <div className=\"row\">\r\n          <div className=\"col\">{showDownloadLink(order)}</div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <UserNav />\r\n        </div>\r\n        <div className=\"col text-center\">\r\n          <h4>\r\n            {orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}\r\n          </h4>\r\n          {showEachOrders()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import axios from \"axios\";\r\n\r\nexport const userCart = async (cart, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart`,\r\n    { cart },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const getUserCart = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const emptyUserCart = async (authtoken) =>\r\n  await axios.delete(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const saveUserAddress = async (authtoken, address) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/address`,\r\n    { address },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const applyCoupon = async (authtoken, coupon) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart/coupon`,\r\n    { coupon },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const createOrder = async (stripeResponse, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/order`,\r\n    { stripeResponse },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const getUserOrders = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/orders`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const getWishlist = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/wishlist`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const removeWishlist = async (productId, authtoken) =>\r\n  await axios.put(\r\n    `${process.env.REACT_APP_API}/user/wishlist/${productId}`,\r\n    {},\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const addToWishlist = async (productId, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/wishlist`,\r\n    { productId },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const createCashOrderForUser = async (\r\n  authtoken,\r\n  COD,\r\n  couponTrueOrFalse\r\n) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cash-order`,\r\n    { couponApplied: couponTrueOrFalse, COD },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserNav = () => (\r\n  <nav>\r\n    <ul className=\"nav flex-column\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/user/history\" className=\"nav-link\">\r\n          History\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/user/password\" className=\"nav-link\">\r\n          Password\r\n        </Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/user/wishlist\" className=\"nav-link\">\r\n          Wishlist\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default UserNav;\r\n","import React from \"react\";\r\n\r\nconst ShowPaymentInfo = ({ order, showStatus = true }) => (\r\n  <div>\r\n    <p>\r\n      <span>Order Id: {order.paymentIntent.id}</span>\r\n      {\" / \"}\r\n      <span>\r\n        Amount:{\" / \"}\r\n        {(order.paymentIntent.amount /= 100).toLocaleString(\"en-US\", {\r\n          style: \"currency\",\r\n          currency: \"INR\",\r\n        })}\r\n      </span>\r\n      {\" / \"}\r\n      <span>Currency: {order.paymentIntent.currency.toUpperCase()}</span>\r\n      {\" / \"}\r\n      <span>Method: {order.paymentIntent.payment_method_types[0]}</span>\r\n      {\" / \"}\r\n      <span>Payment: {order.paymentIntent.status.toUpperCase()}</span>\r\n      {\" / \"}\r\n      <br></br>\r\n      <span>\r\n        Orderd on:{\" / \"}\r\n        {new Date(order.paymentIntent.created * 1000).toLocaleString()}\r\n      </span>\r\n      {\" / \"}\r\n      <br />\r\n      {showStatus && (\r\n        <span className=\"badge bg-primary text-white\">\r\n          STATUS: {order.orderStatus}\r\n        </span>\r\n      )}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default ShowPaymentInfo;\r\n"],"sourceRoot":""}